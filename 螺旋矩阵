class Solution {
public:
//这个问题主要是一个模拟内容
    vector<vector<int>> generateMatrix(int n) {
        vector<vector<int>> res(n,vector<int>(n,0)); //设置一个二维数组
        int startx=0,starty=0; //定义每循环一个圈的起始位置
        int loop=n/2; //记录循环几圈 如果n=3就循环一圈最后补上中心元素，如果n=2就循环一圈足以
        int mid=n/2; //记录中心点位置 例如n=3 中心点就是1,1
        int count=1;
        int offset=1; //控制遍历边的长度
        int i,j;
        while(loop--){
            i=startx;
            j=starty;
            for(j;j<n-offset;j++){
                //遍历左闭右开区间 
                res[i][j]=count++;
            }
            for(i;i<n-offset;i++){
                //遍历右侧的一条区间
                res[i][j]=count++; //例题中遍历完这个循环i=2 j=2
            }
            for(j;j>starty;j--){
                //遍历下面的区间
                res[i][j]=count++;
            }
            for(i;i>startx;i--){
                res[i][j]=count++;
            }
            // 第二圈开始的时候，起始位置要各自加1， 例如：第一圈起始位置是(0, 0)，第二圈起始位置是(1, 1)
            startx++;
            starty++;
            offset++; //offset控制每圈循环的长度

        }
        // 如果n为奇数的话，需要单独给矩阵最中间的位置赋值
        if (n % 2) {
            res[mid][mid] = count;
        }
        return res;
    }
};
